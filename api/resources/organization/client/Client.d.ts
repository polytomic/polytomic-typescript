/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as PolytomicApi from "../../..";
export declare namespace Organization {
    interface Options {
        environment?: core.Supplier<environments.PolytomicApiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Organization {
    protected readonly _options: Organization.Options;
    constructor(_options: Organization.Options);
    /**
     * > ðŸš§ Requires partner key
     * >
     * > Organization endpoints are only accessible using [partner keys](https://docs.polytomic.com/reference/authentication#partner-keys)
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetOrganizations(requestOptions?: Organization.RequestOptions): Promise<PolytomicApi.V2OrganizationsEnvelope>;
    /**
     * > ðŸš§ Requires partner key
     * >
     * > Organization endpoints are only accessible using [partner keys](https://docs.polytomic.com/reference/authentication#partner-keys)
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2CreateOrganization(request: PolytomicApi.V2CreateOrganizationRequestSchema, requestOptions?: Organization.RequestOptions): Promise<PolytomicApi.V2OrganizationEnvelope>;
    /**
     * > ðŸš§ Requires partner key
     * >
     * > Organization endpoints are only accessible using [partner keys](https://docs.polytomic.com/reference/authentication#partner-keys)
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetOrganization(id: string, requestOptions?: Organization.RequestOptions): Promise<PolytomicApi.V2OrganizationEnvelope>;
    /**
     * > ðŸš§ Requires partner key
     * >
     * > Organization endpoints are only accessible using [partner keys](https://docs.polytomic.com/reference/authentication#partner-keys)
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2RemoveOrganization(id: string, requestOptions?: Organization.RequestOptions): Promise<void>;
    /**
     * > ðŸš§ Requires partner key
     * >
     * > Organization endpoints are only accessible using [partner keys](https://docs.polytomic.com/reference/authentication#partner-keys)
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2UpdateOrganization(id: string, request: PolytomicApi.V2UpdateOrganizationRequestSchema, requestOptions?: Organization.RequestOptions): Promise<PolytomicApi.V2OrganizationEnvelope>;
    protected _getAuthorizationHeader(): Promise<string>;
}
