/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as PolytomicApi from "../../..";
export declare namespace Connections {
    interface Options {
        environment?: core.Supplier<environments.PolytomicApiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Connections {
    protected readonly _options: Connections.Options;
    constructor(_options: Connections.Options);
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnectionTypes(requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2ConnectionTypeResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2ListConnections(requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2ConnectionListResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2CreateConnection(request: PolytomicApi.V2CreateConnectionRequestSchema, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2CreateConnectionResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV3Connect(request: PolytomicApi.V3ConnectCardRequest, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V3ConnectCardResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnection(id: string, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2ConnectionResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2RemoveConnection(id: string, request?: PolytomicApi.ApiV2RemoveConnectionRequest, requestOptions?: Connections.RequestOptions): Promise<void>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2UpdateConnection(id: string, request: PolytomicApi.V2UpdateConnectionRequestSchema, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2CreateConnectionResponseEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnectionSource(id: string, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2GetConnectionMetaEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnectionSourceFields(id: string, request?: PolytomicApi.V2ModelFieldsRequest, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2ModelFieldResponse>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnectionTarget(id: string, request?: PolytomicApi.ApiV2GetConnectionTargetRequest, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2GetConnectionMetaEnvelope>;
    /**
     * @throws {@link PolytomicApi.UnauthorizedError}
     */
    apiV2GetConnectionTargetFields(id: string, request: PolytomicApi.V2TargetRequest, requestOptions?: Connections.RequestOptions): Promise<PolytomicApi.V2TargetResponseEnvelope>;
    protected _getAuthorizationHeader(): Promise<string>;
}
